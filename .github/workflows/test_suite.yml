name: Test Suite

on: [pull_request, push]

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up python
        uses: actions/setup-python@v2.2.1
      - name: Load cache (if exists)
        uses: actions/cache@v2.1.3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip
          restore-keys: ${{ runner.os }}-pip
      - name: Install Black, Flake8 & iSort
        run: python -m pip install black flake8 isort
      - name: Run linters
        run: |
          flake8 .
          black . --check
          isort .

  test:
    needs: linter
    strategy:
      fail-fast: true
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.6", "3.7", "3.8", "3.9"]
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2.3.4
      - name: Set up Python v${{matrix.python-version }}
        uses: actions/setup-python@2.2.1
        with:
          python-version: ${{ matrix.python-version}}
      - name: Install Poetry
        uses: snok/install-poetry@v1.1.1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached virtualenv
        id: cached-poetry-dependencies
        uses: actions/cache@v2.1.3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashfiles('**/poetry.lock') }}
      - name: Install dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.output.cache-hit != 'true'
      - name: Run tests
        run: |
          source $VENV
          pytest -vvv --cov-report xml --cov=Aurochs tests\
      - name: Upload coverage
        uses: codecov/codecov-action@v1.2.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          fail_ci_if_error: true
